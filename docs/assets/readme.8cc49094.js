import{_ as e}from"./index.7d888a97.js";import{b as t,o,u as s}from"./vendor.2226ec98.js";const p={name:"Readme"},a=s('<h1>Vue 3 + Typescript + Vite</h1><p>This template should help get you started developing with Vue 3 and Typescript in Vite. The template uses Vue 3 <code>&lt;script setup&gt;</code> SFCs, check out the <a href="https://v3.vuejs.org/api/sfc-script-setup.html#sfc-script-setup">script setup docs</a> to learn more.</p><h2>Recommended IDE Setup</h2><ul><li><a href="https://code.visualstudio.com/">VSCode</a> + <a href="https://marketplace.visualstudio.com/items?itemName=johnsoncodehk.volar">Volar</a></li></ul><h2>Type Support For <code>.vue</code> Imports in TS</h2><p>Since TypeScript cannot handle type information for <code>.vue</code> imports, they are shimmed to be a generic Vue component type by default. In most cases this is fine if you don&#39;t really care about component prop types outside of templates. However, if you wish to get actual prop types in <code>.vue</code> imports (for example to get props validation when using manual <code>h(...)</code> calls), you can enable Volar&#39;s <code>.vue</code> type support plugin by running <code>Volar: Switch TS Plugin on/off</code> from VSCode command palette.</p>',6),c=[a];function r(i,n,u,d,l,m){return o(),t("section",null,c)}var y=e(p,[["render",r]]);export{y as default};
